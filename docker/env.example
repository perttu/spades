# SPAdes GPU Docker Environment Configuration
# Copy this file to .env and customize for your system

# GPU Configuration
SPADES_GPU_SUPPORT=1                    # Enable GPU support (0=disabled, 1=enabled)
SPADES_GPU_STRATEGY=sorted              # GPU k-mer counting strategy (sorted, hash, cuckoo)
SPADES_GPU_BATCH_SIZE=1000000          # Batch size for GPU operations
SPADES_GPU_MEMORY_FRACTION=0.8         # Fraction of GPU memory to use (0.0-1.0)
SPADES_GPU_DEBUG=0                     # Enable GPU debugging (0=disabled, 1=enabled)

# CUDA Configuration
CUDA_VISIBLE_DEVICES=all               # GPU devices to use (all, 0, 1, 0,1, etc.)
NVIDIA_VISIBLE_DEVICES=all             # NVIDIA Docker GPU visibility
NVIDIA_DRIVER_CAPABILITIES=compute,utility # NVIDIA Docker capabilities

# Performance Tuning
SPADES_THREADS=16                      # Number of CPU threads to use
SPADES_MEMORY=32                       # Maximum memory in GB
SPADES_TEMP_DIR=/data/tmp              # Temporary directory path

# Container Resource Limits
CONTAINER_MEMORY_LIMIT=32g             # Container memory limit
CONTAINER_CPU_LIMIT=16.0               # Container CPU limit
CONTAINER_SWAP_LIMIT=32g               # Container swap limit

# Data Directories (host paths)
DATA_INPUT_DIR=./data/input            # Input data directory
DATA_OUTPUT_DIR=./data/output          # Output data directory  
DATA_TMP_DIR=./data/tmp                # Temporary files directory
DATA_CONFIG_DIR=./config               # Configuration files directory
DATA_LOGS_DIR=./logs                   # Log files directory

# Network Configuration
SPADES_NETWORK_SUBNET=172.20.0.0/16    # Docker network subnet

# Monitoring (optional)
ENABLE_GPU_MONITORING=false            # Enable GPU monitoring service
MONITORING_PORT=9400                   # GPU monitoring metrics port

# Jupyter (optional)
ENABLE_JUPYTER=false                   # Enable Jupyter service
JUPYTER_PORT=8888                      # Jupyter port
JUPYTER_TOKEN=spades-gpu-token         # Jupyter access token

# Build Configuration
BUILD_TYPE=Release                     # CMake build type (Release, Debug, RelWithDebInfo)
DOCKER_BUILDKIT=1                      # Enable Docker BuildKit for faster builds

# Registry Configuration (for pushing images)
DOCKER_REGISTRY=                       # Docker registry URL (leave empty for local)
IMAGE_TAG=latest                       # Docker image tag

# Advanced GPU Settings
GPU_COMPUTE_MODE=default               # GPU compute mode (default, exclusive, prohibited)
GPU_PERSISTENCE_MODE=1                 # Enable GPU persistence mode for faster startup

# System Optimization
MALLOC_ARENA_MAX=4                     # Limit memory arenas for better performance
OMP_NUM_THREADS=16                     # OpenMP thread count
OMP_STACKSIZE=2M                       # OpenMP stack size

# Example configurations for different system types:

# High-end workstation (RTX 4090, 64GB RAM):
# SPADES_GPU_MEMORY_FRACTION=0.9
# SPADES_GPU_BATCH_SIZE=2000000
# CONTAINER_MEMORY_LIMIT=64g
# CONTAINER_CPU_LIMIT=32.0

# Mid-range system (RTX 3070, 32GB RAM):
# SPADES_GPU_MEMORY_FRACTION=0.8
# SPADES_GPU_BATCH_SIZE=1000000
# CONTAINER_MEMORY_LIMIT=32g
# CONTAINER_CPU_LIMIT=16.0

# Budget system (GTX 1660, 16GB RAM):
# SPADES_GPU_MEMORY_FRACTION=0.7
# SPADES_GPU_BATCH_SIZE=500000
# CONTAINER_MEMORY_LIMIT=16g
# CONTAINER_CPU_LIMIT=8.0

# Cloud instance (AWS p3.2xlarge):
# SPADES_GPU_MEMORY_FRACTION=0.9
# SPADES_GPU_BATCH_SIZE=1500000
# CONTAINER_MEMORY_LIMIT=60g
# CONTAINER_CPU_LIMIT=8.0 